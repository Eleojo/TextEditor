@using Microsoft.AspNetCore.Identity
@model TextEditor.Models.Doc
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Create Document";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="card border-0 shadow-lg">
                <div class="card-header bg-gradient-primary text-white py-4">
                    <h3 class="mb-0">Create Document</h3>
                </div>
                <div class="card-body p-5">
                    <form asp-action="Create" method="post" id="createDocForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                        <input type="hidden" asp-for="Id" id="docId" />

                        <div class="mb-4">
                            <label asp-for="Title" class="form-label fw-bold">Title</label>
                            <input asp-for="Title" class="form-control form-control-lg" placeholder="Enter document title" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="mb-5">
                            <label asp-for="Content" class="form-label fw-bold">Content</label>
                            <textarea id="tiny" asp-for="Content" class="form-control form-control-lg" rows="15"></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                        </div>

                        <input type="hidden" asp-for="UserId" value="@userManager.GetUserId(User)" />

                        <div class="d-flex justify-content-between">
                            <a class="btn btn-secondary btn-lg" asp-action="Index">Cancel</a>
                            <button type="submit" class="btn btn-success btn-lg">Save Document</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to generate a GUID
        function generateGUID() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0,
                    v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        // Set the generated GUID in the hidden Id field when the page loads
        document.addEventListener("DOMContentLoaded", function () {
            var docIdInput = document.getElementById("docId");
            docIdInput.value = generateGUID();
        });
    </script>
}
